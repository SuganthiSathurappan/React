import React, { Component } from "react";
import { Field, formInputData, formValidation } from 'reactjs-input-validator';


export default class App extends Component {
    constructor() {
        super();
        this.state = {
            data: {},
        };
        this.handleChange = this.handleChange.bind(this);
        this.handleSubmit = this.handleSubmit.bind(this);
    }

    handleChange(event, inputValue, inputName, validationState, isRequired) {
        const value = (event && event.target.value) || inputValue;
        const { data } = this.state;
        data[inputName] = { value, validation: validationState, isRequired };
        this.setState({
            data,
        });
        // if you want access to your form data
        const formData = formInputData(this.state.data); // eslint-disable-line no-unused-vars
        // tells you if the entire form validation is true or false
        const isFormValid = formValidation(this.state.data); // eslint-disable-line no-unused-vars
    }

    handleSubmit(event) {
        /*event.preventDefault();*/
        const isFormValid = formValidation(this.state.data);

        if (isFormValid) {
            // do anything including ajax calls
            alert('enter full details');
            // this.setState({ callAPI: true });
        } else {
            alert(' full details');
            // this.setState({ callAPI: true, shouldValidateInputs: !isFormValid });
        }
    }
    render() {

        const passwordValue = this.state.data.password && this.state.data.password.value;
        return (
            <div className="login-form-container">
                <form className="login-form">
                    <div className="login-form-content">
                        <h3>Registration Form</h3>
                        <h5>Please fill in this form to create an account </h5>
                        <hr />
                        <div className="form-group mt-3">
                            <label >Full Name</label>
                            <input required
                                type="text" name="fullName" placeholder="Enter Name"
                                className="form-control mt-1" onChange={this.handleChange}
                                value={this.state.data.fullName}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                        </div>
                        <div className="form-group mt-3">
                            <label >Email address</label>
                            <Field
                                validator="isEmail" required
                                name="email" placeholder="Email"
                                onChange={this.handleChange}
                                value={this.state.data.email}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                            {/*<input
                                validator="isEmail" type="text" name="email" placeholder="Enter Email"
                                className="form-control mt-1" onChange={this.handleChange}
                                value={this.state.data.email}
                                shouldValidateInputs={this.state.shouldValidateInputs}
        />*/}
                        </div>
                        <div className="form-group mt-3">
                            <label>Password</label>
                            <input minLength={8} required
                                validator="isAlphanumeric" type="text" name="password" placeholder="Enter pasword"
                                minLengthErrMsg="Short passwords. Try one with atleast 8 characters"
                                className="form-control mt-1" onChange={this.handleChange}
                                value={this.state.data.password}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                        </div>
                        <div className="form-group mt-3">
                            <label>Confirm Password</label>
                            <input minLength={8} required comparison={passwordValue}
                                validator="equal" type="text" name="confirmPassword" placeholder="Enter pasword"
                                minLengthErrMsg="These passwords don't match. Try again?"
                                className="form-control mt-1" onChange={this.handleChange}
                                value={this.state.data.confirmPassword}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                        </div>
                        <div className="from-group mt-3">
                            <label >Phone number</label>
                            <input validator="isNumeric" name="phonenumber" required maxLength={11}
                                type="text" placeholder="+123456789" className="form-control mt-1"
                                onChange={this.handleChange}
                                value={this.state.data.confirmPassword}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                        </div>

                        <div className="form-group mt-3">
                            <label >Address</label>
                            <textarea className="form-control mt-1" required name="address"
                                requiredErrMsg="Enter your address so we can send you awesome stuff"
                                placeholder="1234 Main St..." onChange={this.handleChange}
                                value={this.state.data.address}
                                shouldValidateInputs={this.state.shouldValidateInputs}
                            />
                        </div>

                        <div className="d-grid mt-3">
                            <button type="submit" onClick={this.handleSubmit}
                                className="btn btn-primary">
                                Submit
                            </button>

                        </div>
                    </div>
                </form>
            </div>);
    }
}